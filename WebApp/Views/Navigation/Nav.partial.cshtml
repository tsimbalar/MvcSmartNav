@using MvcSmartNav.ViewModels
@model NavTreeViewModelBase

@functions
{
    string BuildToolTip(INavComponentViewModel node)
    {
        var result = node.ToolTip;

        if (node.IsVisible)
        {
            result = result + " - visible because ";
        }
        else
        {
            result = result + " - invisible because ";
        }
        result = result + node.VisibilityReason;


        result = result + " - ";

        if (node.IsActive)
        {
            result = result + "active because ";
        }
        else
        {
            result = result + "inactive because ";
        }
        result = result + node.ActivationReason;



        result = result + " - ";

        if (node.IsDisabled)
        {
            result = result + "disabled because ";
        }
        else
        {
            result = result + "enabled because ";
        }
        result = result + node.DisabledReason;


        return result;
    }

    string BuildLinkCssClasses(INavComponentViewModel node)
    {
        var cssClasses = new List<String>();
        if (node.IsActive)
        {
            cssClasses.Add("active");
        }
        if (node.IsDisabled)
        {
            cssClasses.Add("disabled");
        }
        var cssClassesAsString = String.Join(" ", cssClasses);

        return cssClassesAsString;
    }
}
<style>
    .nav .active {
        font-weight: bold;
    }

    .nav .disabled a, .nav .disabled {
        color: #c0c0c0;
        cursor: not-allowed;
    }
</style>
<div class="nav">
    <a href="@Model.NavigationRoot.TargetUrl" title="@BuildToolTip(Model.NavigationRoot)" class="nav-item nav-root @BuildLinkCssClasses(Model.NavigationRoot)">@Model.NavigationRoot.Name</a>
    <ul class="nav-menu nav-level-0">
        @foreach (var level0 in Model.NavigationRoot.Children)
        {
            <li class="nav-item">
                <a @(!level0.IsDisabled ? "href=" + level0.TargetUrl : "") title="@BuildToolTip(level0)" class="@BuildLinkCssClasses(level0)">
                    @if (!level0.IsVisible)
                    {
                        <del>@level0.Name</del>
                    }
                    else
                    {
                        @level0.Name
                    }
                </a>
                @if (level0.HasChildren)
                {
                    <ul class="nav-menu nav-level1">
                        @foreach (var level1 in level0.Children)
                        {
                            <li class="nav-item">
                                <a @(!level1.IsDisabled ? "href=" + level1.TargetUrl : "") title="@BuildToolTip(level1)" class="@BuildLinkCssClasses(level1)">
                                    @if (!level1.IsVisible)
                                    {
                                        <del>@level1.Name</del>
                                    }
                                    else
                                    {
                                        @level1.Name
                                    }
                                </a>
                            </li>
                        }
                    </ul>
                }
            </li>
        }
    </ul>
</div>
